broker = "34.146.29.164:29092"
topic = "test1"

48:30

192.168.0.26:29092
start: 2:31 ~

#topics

--생성
docker-compose -f docker-compose_server.yml exec kafka-1 kafka-topics --create --bootstrap-server kafka-1:9092 --replication-factor 3 --partitions 4 --topic test1

docker-compose exec kafka-1 kafka-topics --create --topic test1 --bootstrap-server kafka-1:9092 --replication-factor 3 --partitions 3

--조회
docker-compose -f docker-compose_server.yml exec kafka-1 kafka-topics --list --bootstrap-server kafka-1:9092


--삭제
docker-compose -f docker-compose_server.yml exec kafka-1 kafka-topics --delete --bootstrap-server kafka-1:9092 --topic test1


버퍼/캐시메모리 삭제
sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'

2:43

#pro

docker-compose -f docker-compose_server.yml exec kafka-1 kafka-producer-perf-test \
--producer-props bootstrap.servers=34.146.29.164:29092 \
--print-metric \
--record-size 4096 --num-records 1000000 --throughput -3000 \
--topic test1


# 윈도우
./kafka-producer-perf-test.bat `
--producer-props bootstrap.servers=34.146.29.164:29092 `
--print-metric `
--record-size 4096 --num-records 1000000 --throughput 10000 `
--topic test1



#con

./kafka-consumer-perf-test.bat `
--broker-list 34.146.29.164:29092 `
--topic test1 `
--messages 20000000 `
--show-detailed-stats `
--reporting-interval 1000


##윈도우
docker-compose -f docker-compose.yml exec kafka-1 kafka-consumer-perf-test \
--broker-list 34.146.29.164:2139092 \
--topic test1 \
--messages 20000000 \
--show-detailed-stats \
--reporting-interval 1000


wget https://github.com/danielqsj/kafka_exporter/releases/download/v2.3.1/kafka_exporter-2.3.1.linux-amd64.tar.gz


10만개 씩(1,428)

-비동기(aiokafka)
2023-08-13 22:16:55,460
2023-08-13 22:16:55,874
=0.0414

-동기 처리(confluent)

2023-08-13 22:24:26,226
2023-08-13 22:24:27,059
=0.0833

-동기처리(kafka-python)
2023-08-13 21:44:33,149
2023-08-13 21:44:34,165
= 0.1016초



30만개씩(1,395)

-비동기(aiokafka)
2023-08-13 22:44:06,581
2023-08-13 22:44:06,582
=0.001

-동기 처리(confluent)
2023-08-13 22:03:46,581
2023-08-13 22:03:48,122
=0.1541초

-동기처리(kafka-python)
2023-08-13 21:53:51,665
2023-08-13 21:53:52,059
=0.0394초


70만개씩(1,386)

-비동기(aiokafka)
2023-08-13 23:04:43,538 
2023-08-13 23:04:44,989
= 0.1451

-동기 처리(confluent)
2023-08-14 00:09:13,896
2023-08-14 00:09:17,256
= 0.3360

-동기처리(kafka-python)
2023-08-13 23:34:28,019
2023-08-13 23:34:28,812
=0.0793



10만개, 1개당 4092byte

메시지큐:86.87768530845642                   20.085266590118408

파이프:108.11168384552002                    35.818610429763794

공유메모리: 97.59458422660828                25.31653141975403


20만개, 1개당 4092byte

메시지큐:180.86609554290771

파이프:221.02308297157288


공유메모리: 193.66116905212402

11:32 ~12:00







